// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Darkside.LeasingCalc.Data.Models;

public partial class DarksideLeasingCalcDbContext : DbContext
{
    public DarksideLeasingCalcDbContext(DbContextOptions<DarksideLeasingCalcDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CarLease> CarLeases { get; set; }

    public virtual DbSet<DailyMilageDetail> DailyMilageDetails { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CarLease>(entity =>
        {
            entity.ToTable("CarLease");

            entity.Property(e => e.Id).HasDefaultValueSql("newid()");
            entity.Property(e => e.CarNumber)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasDefaultValueSql("0");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CurrentMileage).HasDefaultValueSql("0");
            entity.Property(e => e.CustomerName)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.StartingMileage).HasDefaultValueSql("0");
            entity.Property(e => e.TotalYears).HasDefaultValueSql("0");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.YearlyMiles)
                .HasDefaultValueSql("0")
                .HasColumnType("decimal(18, 0)");
        });

        modelBuilder.Entity<DailyMilageDetail>(entity =>
        {
            entity.Property(e => e.Id).HasDefaultValueSql("newid()");
            entity.Property(e => e.ActualMileage).HasDefaultValueSql("0");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.ExpectedMilage).HasDefaultValueSql("0");
            entity.Property(e => e.ExpectedMileDriven).HasDefaultValueSql("0");
            entity.Property(e => e.MilageDate).HasColumnType("datetime");
            entity.Property(e => e.MilageDifference).HasDefaultValueSql("0");
            entity.Property(e => e.MilesDriven).HasDefaultValueSql("0");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}